apiVersion: batch/v1
kind: Job
metadata:
  name: nextcloud-post-install
  namespace: nextcloud
  annotations:
    # This ensures the job runs after the main deployment
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      name: nextcloud-post-install
    spec:
      serviceAccountName: nextcloud-jobs
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: alpine/kubectl:1.34.1
        env:
        - name: ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: nextcloud-admin
              key: username
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-admin
              key: password
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-db
              key: password
        command:
        - /bin/sh
        - -c
        - |
          set -e

          echo "Waiting for Nextcloud pod to be ready..."
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=nextcloud -n nextcloud --timeout=600s

          POD=$(kubectl get pods -n nextcloud -l app.kubernetes.io/name=nextcloud -o jsonpath='{.items[0].metadata.name}')
          echo "Found pod: $POD"

          # Wait for Nextcloud to be accessible
          echo "Waiting for Nextcloud to be accessible..."
          for i in {1..30}; do
            if kubectl exec -n nextcloud $POD -c nextcloud -- curl -s -o /dev/null -w "%{http_code}" http://localhost/ | grep -q "200\|302"; then
              echo "Nextcloud is accessible"
              break
            fi
            echo "Waiting for Nextcloud to start... ($i/30)"
            sleep 10
          done

          echo "Checking if Nextcloud is already installed..."
          if kubectl exec -n nextcloud $POD -c nextcloud -- php occ status | grep -q "installed: true"; then
            echo "Nextcloud is already installed"
          else
            echo "Installing Nextcloud..."
            kubectl exec -n nextcloud $POD -c nextcloud -- php occ maintenance:install --database=pgsql --database-host=postgres-apps-rw.postgres.svc.cluster.local --database-name=nextcloud --database-user=nextcloud --database-pass="$DB_PASSWORD" --admin-user="$ADMIN_USER" --admin-pass="$ADMIN_PASSWORD" --data-dir=/var/www/html/data
          fi

          echo "Configuring trusted domains..."
          kubectl exec -n nextcloud $POD -c nextcloud -- php occ config:system:set trusted_domains 0 --value=localhost
          kubectl exec -n nextcloud $POD -c nextcloud -- php occ config:system:set trusted_domains 1 --value=nextcloud.daddyshome.fr
          kubectl exec -n nextcloud $POD -c nextcloud -- php occ config:system:set trusted_domains 2 --value=drive.daddyshome.fr
          kubectl exec -n nextcloud $POD -c nextcloud -- php occ config:system:set trusted_domains 3 --value=drive-mobile.daddyshome.fr

          echo "Configuring overwrite protocol..."
          kubectl exec -n nextcloud $POD -c nextcloud -- php occ config:system:set overwriteprotocol --value=https

          echo "Configuring UTF8 support..."
          kubectl exec -n nextcloud $POD -c nextcloud -- php occ config:system:set mysql.utf8mb4 --type=boolean --value=true

          echo "Enabling external storage app..."
          kubectl exec -n nextcloud $POD -c nextcloud -- php occ app:enable files_external || true

          echo "Configuring external storage..."
          # Check if Media storage already exists
          if ! kubectl exec -n nextcloud $POD -c nextcloud -- php occ files_external:list | grep -q "Media"; then
            kubectl exec -n nextcloud $POD -c nextcloud -- php occ files_external:create -c datadir=/media 'Media' local null::null
          fi

          echo "Setting default phone region..."
          kubectl exec -n nextcloud $POD -c nextcloud -- php occ config:system:set default_phone_region --value=FR

          echo "Fixing file permissions..."
          kubectl exec -n nextcloud $POD -c nextcloud -- chown -R www-data:www-data /var/www/html

          echo "Nextcloud post-install completed!"
