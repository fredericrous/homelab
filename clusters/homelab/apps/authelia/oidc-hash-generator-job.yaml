---
apiVersion: batch/v1
kind: Job
metadata:
  name: authelia-oidc-hash-generator
  namespace: authelia
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      serviceAccountName: authelia
      restartPolicy: OnFailure
      containers:
      - name: hash-generator
        image: authelia/authelia:4.38
        command:
        - /bin/sh
        - -c
        - |
          set -e
          
          echo "Generating hashed client secret for Authelia OIDC configuration..."
          
          # Install kubectl
          apk add --no-cache curl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/
          
          # Wait for the client secret to be available
          echo "Waiting for OIDC client secret to be generated..."
          while ! kubectl get secret vault-oidc-client-secret-temp >/dev/null 2>&1; do
            echo "Waiting for vault-oidc-client-secret-temp secret..."
            sleep 5
          done
          
          # Get the plain client secret
          CLIENT_SECRET=$(kubectl get secret vault-oidc-client-secret-temp -o jsonpath='{.data.vault}' | base64 -d)
          
          echo "Generating PBKDF2 hash for client secret..."
          
          # Generate hashed secret using Authelia's hash-password command
          HASHED_SECRET=$(authelia hash-password "$CLIENT_SECRET")
          
          echo "Generated hash: $HASHED_SECRET"
          
          # Create a ConfigMap with the hashed secret for reference
          kubectl create configmap authelia-oidc-client-hash \
            --from-literal=hashed_secret="$HASHED_SECRET" \
            --from-literal=instructions="Update configmap.yaml with this hashed secret" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          echo "âœ… Hashed client secret stored in configmap: authelia-oidc-client-hash"
          echo "Manual step required: Update configmap.yaml with the hashed secret"
          
        volumeMounts:
        - name: vault-oidc-secret
          mountPath: /var/secrets/vault-oidc
          readOnly: true
        resources:
          requests:
            memory: 64Mi
            cpu: 100m
          limits:
            memory: 128Mi
            cpu: 200m
      volumes:
      - name: vault-oidc-secret
        secret:
          secretName: vault-oidc-client-secret-temp
          optional: true