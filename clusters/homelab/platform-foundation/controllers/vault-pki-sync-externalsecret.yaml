---
# SecretStore for NAS Vault
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: nas-vault-backend
  namespace: flux-system
spec:
  provider:
    vault:
      server: "http://192.168.1.42:61200"
      path: "secret"
      version: "v2"
      auth:
        tokenSecretRef:
          name: "vault-transit-token"
          key: "token"
---
# SecretStore for cluster Vault
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: cluster-vault-backend
  namespace: flux-system
spec:
  provider:
    vault:
      server: "http://vault-vault.vault.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        tokenSecretRef:
          name: "vault-admin-token"
          key: "token"
---
# Step 1: ExternalSecret to get PKI from NAS Vault into a temporary K8s secret
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: vault-pki-from-nas
  namespace: flux-system
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: nas-vault-backend
    kind: SecretStore
  target:
    name: vault-pki-bridge
    creationPolicy: Owner
  data:
  - secretKey: ca.crt
    remoteRef:
      key: pki/ca
      property: ca.crt
  - secretKey: ca.key
    remoteRef:
      key: pki/ca
      property: ca.key
---
# Step 2: PushSecret to push PKI from K8s secret to cluster Vault
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: vault-pki-to-cluster
  namespace: flux-system
spec:
  refreshInterval: 24h
  secretStoreRefs:
  - name: cluster-vault-backend
    kind: SecretStore
  selector:
    secret:
      name: vault-pki-bridge
  data:
  - match:
      secretKey: ca.crt
      remoteRef:
        remoteKey: pki/ca
        property: ca.crt
  - match:
      secretKey: ca.key
      remoteRef:
        remoteKey: pki/ca
        property: ca.key