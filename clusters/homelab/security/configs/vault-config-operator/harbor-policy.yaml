# Namespace-scoped policy for Harbor to read/write its own secrets
apiVersion: redhatcop.redhat.io/v1alpha1
kind: Policy
metadata:
  name: harbor
  namespace: vault-config-operator
spec:
  authentication:
    path: kubernetes
    role: controller-manager
    serviceAccount:
      name: controller-manager
  policy: |
    # Harbor can read/write its own secrets (including root path)
    path "secret/data/harbor" {
      capabilities = ["create", "read", "update", "delete", "list"]
    }
    
    # Harbor can read/write for PushSecret
    path "secret/data/harbor/*" {
      capabilities = ["create", "read", "update", "delete", "list"]
    }
    
    # Metadata access for PushSecret (including root path)
    path "secret/metadata/harbor" {
      capabilities = ["read", "list", "create", "update", "delete"]
    }
    
    # Metadata access for subpaths
    path "secret/metadata/harbor/*" {
      capabilities = ["read", "list", "create", "update", "delete"]
    }
    
    # Harbor needs to read OVH credentials
    path "secret/data/ovh/harbor" {
      capabilities = ["read", "list"]
    }
  type: acl
---
# Kubernetes auth role for Harbor namespace
apiVersion: redhatcop.redhat.io/v1alpha1
kind: KubernetesAuthEngineRole
metadata:
  name: harbor
  namespace: vault-config-operator
spec:
  authentication:
    path: kubernetes
    role: controller-manager
    serviceAccount:
      name: controller-manager
  path: kubernetes
  policies:
    - harbor
    - external-secrets
  targetServiceAccounts:
    - default
    - harbor
  targetNamespaces:
    targetNamespaces:
      - harbor