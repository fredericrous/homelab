# Generate passwords for Nextcloud
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: Password
metadata:
  name: nextcloud-admin-password
  namespace: nextcloud
spec:
  length: 32
  digits: 5
  symbols: 5
  symbolCharacters: "-_"
  noUpper: false
  allowRepeat: true
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: Password
metadata:
  name: nextcloud-db-password
  namespace: nextcloud
spec:
  length: 32
  digits: 5
  symbols: 5
  symbolCharacters: "-_"
  noUpper: false
  allowRepeat: true
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: Password
metadata:
  name: nextcloud-ldap-password
  namespace: nextcloud
spec:
  length: 32
  digits: 5
  symbols: 5
  symbolCharacters: "-_"
  noUpper: false
  allowRepeat: true
---
# Generate admin credentials
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: nextcloud-admin-generated
  namespace: nextcloud
spec:
  refreshInterval: "0"  # Generate once and never refresh
  target:
    name: nextcloud-admin-generated
    creationPolicy: Owner
    template:
      engineVersion: v2
      type: Opaque
      data:
        username: "admin"
        password: "{{ .password }}"
  dataFrom:
  - sourceRef:
      generatorRef:
        apiVersion: generators.external-secrets.io/v1alpha1
        kind: Password
        name: nextcloud-admin-password
---
# Generate database credentials (for CloudNativePG)
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: nextcloud-db-credentials-generator
  namespace: nextcloud
spec:
  refreshInterval: "0"  # Generate once
  target:
    name: nextcloud-db-app
    creationPolicy: Owner
    template:
      type: kubernetes.io/basic-auth
      metadata:
        annotations:
          # Allow reflection to postgres namespace
          reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
          reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "postgres"
          reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
          reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "postgres"
      data:
        username: "nextcloud"
        password: "{{ .password }}"
  dataFrom:
  - sourceRef:
      generatorRef:
        apiVersion: generators.external-secrets.io/v1alpha1
        kind: Password
        name: nextcloud-db-password
---
# Generate LDAP bind credentials
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: nextcloud-ldap-generated
  namespace: nextcloud
spec:
  refreshInterval: "0"  # Generate once
  target:
    name: nextcloud-ldap-generated
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        bindDN: "uid=nextcloud,ou=people,dc=daddyshome,dc=fr"
        password: "{{ .password }}"
  dataFrom:
  - sourceRef:
      generatorRef:
        apiVersion: generators.external-secrets.io/v1alpha1
        kind: Password
        name: nextcloud-ldap-password
---
# Push admin credentials to Vault
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: nextcloud-admin-push
  namespace: nextcloud
spec:
  refreshInterval: "1h"
  secretStoreRefs:
  - name: vault-backend
    kind: SecretStore
  selector:
    secret:
      name: nextcloud-admin-generated
  data:
  - match:
      secretKey: username
      remoteRef:
        remoteKey: nextcloud/admin
        property: username
  - match:
      secretKey: password
      remoteRef:
        remoteKey: nextcloud/admin
        property: password
---
# Push database info to Vault
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: nextcloud-db-push
  namespace: nextcloud
spec:
  refreshInterval: "1h"
  secretStoreRefs:
  - name: vault-backend
    kind: SecretStore
  selector:
    secret:
      name: nextcloud-db-app
  data:
  - match:
      secretKey: username
      remoteRef:
        remoteKey: nextcloud/database
        property: user
  - match:
      secretKey: password
      remoteRef:
        remoteKey: nextcloud/database
        property: password
---
# Push static database config to Vault
apiVersion: v1
kind: Secret
metadata:
  name: nextcloud-db-static-config
  namespace: nextcloud
type: Opaque
stringData:
  name: "nextcloud"
  host: "postgres-apps-rw.postgres.svc.cluster.local"
  port: "5432"
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: nextcloud-db-static-push
  namespace: nextcloud
spec:
  refreshInterval: "1h"
  secretStoreRefs:
  - name: vault-backend
    kind: SecretStore
  selector:
    secret:
      name: nextcloud-db-static-config
  data:
  - match:
      secretKey: name
      remoteRef:
        remoteKey: nextcloud/database
        property: name
  - match:
      secretKey: host
      remoteRef:
        remoteKey: nextcloud/database
        property: host
  - match:
      secretKey: port
      remoteRef:
        remoteKey: nextcloud/database
        property: port
---
# Push LDAP credentials to Vault
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: nextcloud-ldap-push
  namespace: nextcloud
spec:
  refreshInterval: "1h"
  secretStoreRefs:
  - name: vault-backend
    kind: SecretStore
  selector:
    secret:
      name: nextcloud-ldap-generated
  data:
  - match:
      secretKey: bindDN
      remoteRef:
        remoteKey: nextcloud/ldap
        property: bindDN
  - match:
      secretKey: password
      remoteRef:
        remoteKey: nextcloud/ldap
        property: password