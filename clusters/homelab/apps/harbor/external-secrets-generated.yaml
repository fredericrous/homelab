# Harbor admin secret with generated password
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: harbor-admin-generated
  namespace: harbor
spec:
  refreshInterval: "0"  # Never refresh (password shouldn't change)
  target:
    name: harbor-admin
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Harbor expects a key called "secret" for the admin password
        secret: "{{ .password }}"
        username: "admin"
        password: "{{ .password }}"
  dataFrom:
  - sourceRef:
      generatorRef:
        apiVersion: generators.external-secrets.io/v1alpha1
        kind: Password
        name: harbor-admin-password
---
# Harbor database secret with generated password
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: harbor-database-generated
  namespace: harbor
spec:
  refreshInterval: "0"
  target:
    name: harbor-database
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        password: "{{ .password }}"
  dataFrom:
  - sourceRef:
      generatorRef:
        apiVersion: generators.external-secrets.io/v1alpha1
        kind: Password
        name: harbor-database-password
---
# Harbor registry secret with generated password
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: harbor-registry-generated
  namespace: harbor
spec:
  refreshInterval: "0"
  target:
    name: harbor-registry
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        username: "_registry_user"
        password: "{{ .password }}"
        htpasswd: ""  # Empty for now, will be populated later
        REGISTRY_HTTP_SECRET: "{{ .password }}"  # Harbor requires this for HTTP auth
  dataFrom:
  - sourceRef:
      generatorRef:
        apiVersion: generators.external-secrets.io/v1alpha1
        kind: Password
        name: harbor-registry-password
---
# Harbor registry user secret with generated password
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: harbor-registry-user-generated
  namespace: harbor
spec:
  refreshInterval: "0"
  target:
    name: harbor-registry-user
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        username: "stremio"
        password: "{{ .password }}"
  dataFrom:
  - sourceRef:
      generatorRef:
        apiVersion: generators.external-secrets.io/v1alpha1
        kind: Password
        name: harbor-registry-user-password
---
# Harbor registry htpasswd (empty for now)
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: harbor-registry-htpasswd-generated
  namespace: harbor
spec:
  refreshInterval: "0"
  target:
    name: harbor-registry-htpasswd
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        htpasswd: ""
  data:
  - secretKey: placeholder
    remoteRef:
      key: secret/harbor/config
      property: placeholder
