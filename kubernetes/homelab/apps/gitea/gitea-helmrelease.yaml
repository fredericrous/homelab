apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gitea
  namespace: gitea
spec:
  interval: 10m
  chart:
    spec:
      chart: gitea
      version: '10.4.1'
      sourceRef:
        kind: HelmRepository
        name: gitea
        namespace: flux-system
      interval: 10m
  values:
    # Image configuration
    image:
      repository: gitea/gitea
      tag: "1.22.3"
      pullPolicy: Always

    # Service configuration
    service:
      http:
        type: ClusterIP
        port: 3000
      ssh:
        type: ClusterIP
        port: 22

    # Ingress disabled - we'll use Istio Gateway
    ingress:
      enabled: false

    # Storage
    persistence:
      enabled: true
      storageClass: "rook-ceph-block"
      size: 50Gi
      accessMode: ReadWriteOnce

    # Database configuration - external PostgreSQL
    postgresql-ha:
      enabled: false

    postgresql:
      enabled: false

    # Gitea configuration
    gitea:
      admin:
        existingSecret: gitea-admin

      config:
        APP_NAME: "Gitea: Homelab Git & Registry"

        server:
          PROTOCOL: http
          DOMAIN: giteax.daddyshome.fr
          ROOT_URL: https://giteax.daddyshome.fr
          HTTP_PORT: 3000

        database:
          DB_TYPE: postgres
          HOST: postgres-apps-rw.postgres.svc.cluster.local:5432
          NAME: gitea
          USER: gitea
          PASSWD:
            valueFrom:
              secretKeyRef:
                name: gitea-db-app
                key: password

        cache:
          ENABLED: true
          ADAPTER: redis
          HOST: redis-standalone.ot-operators.svc.cluster.local:6379

        session:
          PROVIDER: redis
          PROVIDER_CONFIG: redis-standalone.ot-operators.svc.cluster.local:6379

        queue:
          TYPE: redis
          CONN_STR: redis://redis-standalone.ot-operators.svc.cluster.local:6379

        packages:
          ENABLED: true
          CHUNKED_UPLOAD_PATH: /tmp/packages

        # Enable container registry
        packages.registry:
          ENABLED: true

        service:
          DISABLE_REGISTRATION: true  # Only LDAP/OIDC users can register
          REQUIRE_SIGNIN_VIEW: false
          ENABLE_NOTIFY_MAIL: false

        security:
          INSTALL_LOCK: true

        # LDAP configuration for LLDAP integration (for service accounts and direct LDAP auth)
        ldap:
          ENABLE_LDAP: true
          LDAP_NAME: "LLDAP Directory"
          LDAP_HOST: "lldap.lldap.svc.cluster.local"
          LDAP_PORT: 3890
          LDAP_SECURITY_PROTOCOL: "unencrypted"
          LDAP_BIND_DN: "uid=gitea-service,ou=people,dc=daddyshome,dc=fr"
          LDAP_BIND_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: gitea-ldap-bind
                key: password
          LDAP_USER_SEARCH_BASE: "ou=people,dc=daddyshome,dc=fr"
          LDAP_USER_FILTER: "(& (objectClass=person)(|(uid=%[1]s)(mail=%[1]s)))"
          LDAP_ADMIN_FILTER: "(memberof=cn=lldap_admin,ou=groups,dc=daddyshome,dc=fr)"
          LDAP_USERNAME_ATTRIBUTE: "uid"
          LDAP_FIRSTNAME_ATTRIBUTE: "givenName"
          LDAP_SURNAME_ATTRIBUTE: "sn"
          LDAP_EMAIL_ATTRIBUTE: "mail"
          LDAP_AVATAR_ATTRIBUTE: "jpegPhoto"
          LDAP_GROUP_SEARCH_BASE: "ou=groups,dc=daddyshome,dc=fr"
          LDAP_GROUP_ATTRIBUTE_CONTAIN_USERS: "member"
          LDAP_USER_ATTRIBUTE_IN_GROUP: "dn"
          LDAP_SKIP_TLS_VERIFY: true

        # OAuth2/OIDC configuration for Authelia integration (for web UI convenience)
        oauth2_client:
          REGISTER_EMAIL_CONFIRM: false
          OPENID_CONNECT_SCOPES: "openid profile email groups"
          ENABLE_AUTO_REGISTRATION: true
          USERNAME: preferred_username
          EMAIL: email
          NAME: name

        # Additional OAuth2 settings
        oauth2:
          JWT_SIGNING_ALGORITHM: "RS256"

        log:
          LEVEL: Info
          MODE: console

    # ServiceAccount
    serviceAccount:
      create: false
      name: gitea

    # Security context
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

    # Health checks
    livenessProbe:
      enabled: true
      httpGet:
        path: /api/healthz
        port: http
      initialDelaySeconds: 200
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 10

    readinessProbe:
      enabled: true
      httpGet:
        path: /api/healthz
        port: http
      initialDelaySeconds: 5
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3

    # Resources
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi
