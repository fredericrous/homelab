---
apiVersion: batch/v1
kind: Job
metadata:
  name: rook-ceph-csi-config
  namespace: rook-ceph
spec:
  template:
    spec:
      serviceAccountName: rook-ceph-csi-config
      containers:
      - name: csi-config
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          
          echo "Waiting for CephConnection to be ready..."
          while ! kubectl get cephconnection rook-ceph -n rook-ceph &>/dev/null; do
            echo "Waiting for CephConnection rook-ceph..."
            sleep 5
          done
          
          echo "Getting monitor endpoints from CephConnection..."
          MONITORS=$(kubectl get cephconnection rook-ceph -n rook-ceph -o jsonpath='{.spec.monitors[*]}' | tr ' ' ',')
          
          if [ -z "$MONITORS" ]; then
            echo "Error: No monitors found in CephConnection"
            exit 1
          fi
          
          echo "Found monitors: $MONITORS"
          
          # Create proper config.json
          CONFIG_JSON="[{\"clusterID\":\"rook-ceph\",\"monitors\":[\"$(echo $MONITORS | sed 's/,/","/g')\"]}]"
          
          echo "Updating ceph-csi-config ConfigMap..."
          kubectl patch configmap ceph-csi-config -n rook-ceph --type merge -p "{\"data\":{\"config.json\":\"$CONFIG_JSON\"}}"
          
          echo "CSI configuration updated successfully"
          
          # Restart CSI controllers to pick up new config
          echo "Restarting CSI controllers..."
          kubectl rollout restart deployment rook-ceph.rbd.csi.ceph.com-ctrlplugin -n rook-ceph
          kubectl rollout restart deployment rook-ceph.cephfs.csi.ceph.com-ctrlplugin -n rook-ceph
          
          echo "Job completed successfully"
      restartPolicy: OnFailure
  backoffLimit: 5
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-ceph-csi-config
  namespace: rook-ceph
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rook-ceph-csi-config
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "patch"]
- apiGroups: ["csi.ceph.io"]
  resources: ["cephconnections"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rook-ceph-csi-config
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-ceph-csi-config
subjects:
- kind: ServiceAccount
  name: rook-ceph-csi-config
  namespace: rook-ceph