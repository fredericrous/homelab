apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-minio-setup
  namespace: flux-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-minio-setup
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-minio-setup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-minio-setup
subjects:
- kind: ServiceAccount
  name: vault-minio-setup
  namespace: flux-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-minio-setup
  namespace: flux-system
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 600
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: vault-minio-setup
      containers:
      - name: vault-setup
        image: hashicorp/vault:1.18.3
        command: 
        - /bin/sh
        - -c
        - |
          # Get Vault token from mounted secret
          VAULT_TOKEN=$(cat /tmp/vault/token)
          export VAULT_TOKEN
          
          # Wait for Vault to be accessible
          echo "Waiting for Vault..."
          until vault status 2>/dev/null; do
            echo "Vault not ready, waiting..."
            sleep 5
          done
          
          # Check if secret already exists
          if vault kv get secret/minio 2>/dev/null; then
            echo "MinIO credentials already exist in Vault"
            exit 0
          fi
          
          # Generate credentials
          MINIO_ROOT_USER="minioadmin"
          MINIO_ROOT_PASSWORD=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
          
          # Store in Vault
          echo "Creating MinIO credentials in Vault..."
          vault kv put secret/minio \
            root-user="$MINIO_ROOT_USER" \
            root-password="$MINIO_ROOT_PASSWORD"
          
          echo "MinIO credentials created successfully"
        env:
        - name: VAULT_ADDR
          value: http://vault-vault.vault.svc.cluster.local:8200
        volumeMounts:
        - name: vault-token
          mountPath: /tmp/vault
          readOnly: true
      
      volumes:
      - name: vault-token
        secret:
          secretName: vault-admin-token
          defaultMode: 0400
          items:
          - key: token
            path: token