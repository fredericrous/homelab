---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-oidc-config
  namespace: vault-config-operator
spec:
  ttlSecondsAfterFinished: 600  # Keep for 10 minutes for debugging
  activeDeadlineSeconds: 3600   # Allow up to 1 hour for Authelia to come online
  template:
    spec:
      serviceAccountName: vault-config-operator
      restartPolicy: OnFailure
      containers:
      - name: vault-config
        image: hashicorp/vault:1.15.2
        command:
        - /bin/sh
        - -c
        - |
          set -e

          echo "üîê Configuring Vault OIDC authentication..."
          
          # Install curl for health checks
          apk add --no-cache curl

          # Set Vault connection
          export VAULT_ADDR=http://vault-vault.vault.svc.cluster.local:8200
          export VAULT_TOKEN=$(cat /var/secrets/vault-admin-token/token)
          
          # Wait for Authelia to be ready
          echo "‚è≥ Waiting for Authelia to be available at https://authx.daddyshome.fr..."
          AUTHELIA_READY=false
          MAX_ATTEMPTS=120  # 10 minutes (5s * 120)
          ATTEMPT=0
          
          while [ $ATTEMPT -lt $MAX_ATTEMPTS ] && [ "$AUTHELIA_READY" = "false" ]; do
            ATTEMPT=$((ATTEMPT + 1))
            echo "  üîç Attempt $ATTEMPT/$MAX_ATTEMPTS: Checking Authelia health..."
            
            # Check if the OIDC discovery endpoint is available
            if curl -s --connect-timeout 10 --max-time 15 "https://authx.daddyshome.fr/.well-known/openid_configuration" >/dev/null 2>&1; then
              echo "  ‚úÖ Authelia is online and responding!"
              AUTHELIA_READY=true
            else
              echo "  ‚è≥ Authelia not ready yet, waiting 5 seconds..."
              sleep 5
            fi
          done
          
          if [ "$AUTHELIA_READY" = "false" ]; then
            echo "‚ùå Authelia did not come online within 10 minutes"
            echo "‚ÑπÔ∏è  This is expected if Authelia is not deployed yet"
            echo "üîÑ This job will retry when re-run after Authelia deployment"
            exit 1
          fi

          echo "üöÄ Proceeding with Vault OIDC configuration..."
          echo "üîß Enabling JWT/OIDC auth method..."

          # Enable OIDC auth method if not already enabled
          if ! vault auth list | grep -q oidc; then
            vault auth enable -path=oidc jwt
            echo "‚úÖ OIDC auth method enabled"
          else
            echo "‚úÖ OIDC auth method already enabled"
          fi

          echo "Configuring OIDC provider (Authelia)..."

          # Configure OIDC provider
          vault write auth/oidc/config \
            oidc_discovery_url="https://authx.daddyshome.fr" \
            oidc_client_id="vault" \
            oidc_client_secret="$(cat /var/secrets/vault-oidc/client_secret)" \
            default_role="admin"

          echo "‚úÖ OIDC provider configured"

          echo "Creating admin role..."

          # Create admin role for Vault OIDC
          vault write auth/oidc/role/admin \
            allowed_redirect_uris="https://vaultx.daddyshome.fr/ui/vault/auth/oidc/oidc/callback,https://vaultx.daddyshome.fr/oidc/callback" \
            user_claim="preferred_username" \
            groups_claim="groups" \
            oidc_scopes="openid,profile,groups,email" \
            policies="admin" \
            ttl="8h" \
            max_ttl="24h"

          echo "‚úÖ Admin role created"

          echo "Creating user role..."

          # Create user role for regular users
          vault write auth/oidc/role/user \
            allowed_redirect_uris="https://vaultx.daddyshome.fr/ui/vault/auth/oidc/oidc/callback,https://vaultx.daddyshome.fr/oidc/callback" \
            user_claim="preferred_username" \
            groups_claim="groups" \
            oidc_scopes="openid,profile,groups,email" \
            policies="default" \
            ttl="2h" \
            max_ttl="8h"

          echo "‚úÖ User role created"

          echo "üéâ OIDC authentication configured successfully!"
          echo "üîó Vault is now configured to use Authelia for OIDC authentication"
          echo "üåê Login URL: https://vaultx.daddyshome.fr/ui/vault/auth/oidc/oidc/callback"

        volumeMounts:
        - name: vault-admin-token
          mountPath: /var/secrets/vault-admin-token
          readOnly: true
        - name: vault-oidc-secret
          mountPath: /var/secrets/vault-oidc
          readOnly: true
      volumes:
      - name: vault-admin-token
        secret:
          secretName: vault-admin-token
      - name: vault-oidc-secret
        secret:
          secretName: vault-oidc-secret
